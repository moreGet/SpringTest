#mysqlDatabase
#spring.datasource.url=jdbc:mysql://localhost:3306/springbootdb?serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=0000

#DataSource configuration
#spring.datasource.sql-script-encoding=utf-8
#spring.datasource.initialization-mode=always
spring.datasource.url=jdbc:postgresql://106.240.247.42:5432/test?serverTimezone=UTC
spring.datasource.username=genie
spring.datasource.password=genie01


spring.jpa.hibernate.ddl-auto=update

#http port (스프링 부트에는 톰캣이 내장되어 있다, 기본번호는 8080이고, 번호를 바꾸고 싶으면 여기다 지정하면 된다.)
# change port number (default 8080)
#server.port=8082

#custom err page 내가 편집한 에러페이지를 사용하고 싶을 때 사용하는 코드
#server.error.whitelabel.enabled=false


# 설정없이도 기본적인 작동은 합니다. 개발모드로 수정하면서 내용 확인하고 싶다면 'spring.thymeleaf.cache'를 false로 선언하시면 되고 운영 모드에서는 true로 해야 합니다.
 spring.thymeleaf.prefix=classpath:templates/
 spring.thymeleaf.check-template-location=true
# spring.thymeleaf.suffix=.html
 spring.thymeleaf.mode=HTML5
 spring.thymeleaf.cache=false
 spring.thymeleaf.order=0
 spring.thymeleaf.encoding=UTF-8
 
# Multipart properties
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Max file size
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded througth the REST API will be stored in this directory

## 포로젝트내의 폴더에 업로드 파일을 설정하고 싶으면 아래 줄처럼 
# file.upload-dir=./uploads
## 본인 pc의 특정 dir에 업로드하고싶으면 아래 줄처럼 설정한다.
file.upload-dir=C:/UPLOAD_FILES

